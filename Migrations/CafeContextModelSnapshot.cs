// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Moldovan_Andrea_SADE_Proiect.Data;

namespace Moldovan_Andrea_SADE_Proiect.Migrations
{
    [DbContext(typeof(CafeContext))]
    partial class CafeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Moldovan_Andrea_SADE_Proiect.Models.Coffee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("Taste")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("ID");

                    b.ToTable("Coffee");
                });

            modelBuilder.Entity("Moldovan_Andrea_SADE_Proiect.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Moldovan_Andrea_SADE_Proiect.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoffeeID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InvoiceID");

                    b.HasIndex("CoffeeID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("Moldovan_Andrea_SADE_Proiect.Models.SuppliedCoffee", b =>
                {
                    b.Property<int>("CoffeeID")
                        .HasColumnType("int");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.HasKey("CoffeeID", "SupplierID");

                    b.HasIndex("SupplierID");

                    b.ToTable("SuppliedCoffee");
                });

            modelBuilder.Entity("Moldovan_Andrea_SADE_Proiect.Models.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Moldovan_Andrea_SADE_Proiect.Models.Invoice", b =>
                {
                    b.HasOne("Moldovan_Andrea_SADE_Proiect.Models.Coffee", "Coffee")
                        .WithMany("Invoices")
                        .HasForeignKey("CoffeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moldovan_Andrea_SADE_Proiect.Models.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coffee");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Moldovan_Andrea_SADE_Proiect.Models.SuppliedCoffee", b =>
                {
                    b.HasOne("Moldovan_Andrea_SADE_Proiect.Models.Coffee", "Coffee")
                        .WithMany("SuppliedCoffees")
                        .HasForeignKey("CoffeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moldovan_Andrea_SADE_Proiect.Models.Supplier", "Supplier")
                        .WithMany("SuppliedCoffee")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coffee");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Moldovan_Andrea_SADE_Proiect.Models.Coffee", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("SuppliedCoffees");
                });

            modelBuilder.Entity("Moldovan_Andrea_SADE_Proiect.Models.Customer", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Moldovan_Andrea_SADE_Proiect.Models.Supplier", b =>
                {
                    b.Navigation("SuppliedCoffee");
                });
#pragma warning restore 612, 618
        }
    }
}
